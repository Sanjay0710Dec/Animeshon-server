// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String          @id @default(cuid())
  username     String          @unique
  email        String          @unique
  password     String
  profile      String?
  banner       String?
  isVerified   Boolean         @default(false)
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
  comments     Comment[]
  favorites    FavoriteAnime[]
  watchHistory WatchHistory[]
}

enum TokenType {
  EMAIL_VERIFICATION
  RESET_PASSWORD
}

model UserVerification {
  token      String    @unique
  identifier String    @unique
  type       TokenType
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Comment {
  id             String   @id @default(cuid())
  userId         String
  user           User     @relation(fields: [userId], references: [id])
  animeId        String
  animeEpisodeId String
  content        String
  spoiler        Boolean  @default(false)
  createdAt      DateTime @default(now())
}

model FavoriteAnime {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  animeId   String
  createdAt DateTime @default(now())
}

model WatchHistory {
  id             String   @id @default(cuid())
  userId         String
  user           User     @relation(fields: [userId], references: [id])
  animeId        String
  animeEpisodeId String
  createdAt      DateTime @default(now())
}

model UserFeedBack{
 id String @id @default(cuid())
 feedback String
 suggestion String?
}
